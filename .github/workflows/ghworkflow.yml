name: CI

on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  unix:

    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-latest]

    name: ${{ matrix.runs-on }} • x64 ${{ matrix.args }}
    runs-on: ${{ matrix.runs-on }}

    steps:

    - name: Basic GitHub action setup
      uses: actions/checkout@v2

    - name: Set conda environment
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-name: myenv
        environment-file: environment-dev.yml
        cache-env: true
        extra-specs: |
          ninja
    - name: Configure using CMake
      shell: bash -l {0}
      run: cmake -Bbuild -G "Ninja" -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DBUILD_TESTS=ON

    - name: Install
      shell: bash -l {0}
      working-directory: build
      run: cmake --install .

    - name: Build xtensor-python
      shell: bash -l {0}
      working-directory: build
      run: cmake --build .

    - name: Test xtensor-python
      shell: bash -l {0}
      working-directory: build/test
      run: ./test_xtensor_signal

  windows:

    strategy:
      fail-fast: false
      matrix:
        runs-on: [windows-latest]

    name: ${{ matrix.runs-on }} • x64 ${{ matrix.args }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Conda environment from environment.yml
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-name: myenv
          environment-file: environment-dev.yml
          cache-env: true
          extra-specs: |
            ninja
      - name: Run Python
        shell: powershell
        run: |
          micromamba info
      - name: Print Conda
        shell: powershell
        run: |
          micromamba list
        
      - name: Configure using CMake
        shell: powershell
        run: |
          cmake -Bbuild -G "Ninja" -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DBUILD_TESTS=ON

      - name: Install
        shell: powershell
        working-directory: build
        run: |
          cmake --install .

      - name: Build xtensor-python
        shell: powershell
        working-directory: build
        run: |
          cmake --build .

      - name: Test xtensor-python
        shell: powershell
        working-directory: test
        run: |
          ls
          ./test_xtensor_signal